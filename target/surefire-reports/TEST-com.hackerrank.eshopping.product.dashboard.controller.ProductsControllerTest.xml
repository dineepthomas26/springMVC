<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="7.714" tests="17" errors="0" skipped="0" failures="14">
  <properties>
    <property name="gopherProxySet" value="false"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/dthomas/Desktop/sols/e-shopping-product-dashboard/target/test-classes:/Users/dthomas/Desktop/sols/e-shopping-product-dashboard/target/classes:/Users/dthomas/.m2/repository/org/springframework/data/spring-data-jpa/2.1.2.RELEASE/spring-data-jpa-2.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/data/spring-data-commons/2.1.2.RELEASE/spring-data-commons-2.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-orm/5.1.2.RELEASE/spring-orm-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-jdbc/5.1.2.RELEASE/spring-jdbc-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-context/5.1.2.RELEASE/spring-context-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-expression/5.1.2.RELEASE/spring-expression-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-aop/5.1.2.RELEASE/spring-aop-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-tx/5.1.2.RELEASE/spring-tx-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-beans/5.1.2.RELEASE/spring-beans-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-core/5.1.2.RELEASE/spring-core-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-jcl/5.1.2.RELEASE/spring-jcl-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/aspectj/aspectjrt/1.9.2/aspectjrt-1.9.2.jar:/Users/dthomas/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.1.0.RELEASE/spring-boot-starter-web-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-starter/2.1.0.RELEASE/spring-boot-starter-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.1.0.RELEASE/spring-boot-starter-logging-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/dthomas/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/dthomas/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.11.1/log4j-to-slf4j-2.11.1.jar:/Users/dthomas/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.1/log4j-api-2.11.1.jar:/Users/dthomas/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/dthomas/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/dthomas/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.1.0.RELEASE/spring-boot-starter-json-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.7/jackson-datatype-jdk8-2.9.7.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.7/jackson-datatype-jsr310-2.9.7.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.7/jackson-module-parameter-names-2.9.7.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.1.0.RELEASE/spring-boot-starter-tomcat-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.12/tomcat-embed-core-9.0.12.jar:/Users/dthomas/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.12/tomcat-embed-el-9.0.12.jar:/Users/dthomas/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.12/tomcat-embed-websocket-9.0.12.jar:/Users/dthomas/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.13.Final/hibernate-validator-6.0.13.Final.jar:/Users/dthomas/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/dthomas/.m2/repository/org/springframework/spring-web/5.1.2.RELEASE/spring-web-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-webmvc/5.1.2.RELEASE/spring-webmvc-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.2.Final/hibernate-jpa-2.1-api-1.0.2.Final.jar:/Users/dthomas/.m2/repository/org/hibernate/hibernate-core/5.3.7.Final/hibernate-core-5.3.7.Final.jar:/Users/dthomas/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/dthomas/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/dthomas/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/dthomas/.m2/repository/net/bytebuddy/byte-buddy/1.9.3/byte-buddy-1.9.3.jar:/Users/dthomas/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/dthomas/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/dthomas/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/dthomas/.m2/repository/com/fasterxml/classmate/1.4.0/classmate-1.4.0.jar:/Users/dthomas/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/dthomas/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/Users/dthomas/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/dthomas/.m2/repository/org/hibernate/hibernate-entitymanager/5.3.7.Final/hibernate-entitymanager-5.3.7.Final.jar:/Users/dthomas/.m2/repository/com/h2database/h2/1.4.197/h2-1.4.197.jar:/Users/dthomas/.m2/repository/com/hackerrank/applications/junit-ordered-test-runner/1.0.0/junit-ordered-test-runner-1.0.0.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.7/jackson-databind-2.9.7.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar:/Users/dthomas/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/dthomas/.m2/repository/org/jdom/jdom/1.1/jdom-1.1.jar:/Users/dthomas/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/dthomas/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/dthomas/.m2/repository/org/springframework/spring-test/5.1.2.RELEASE/spring-test-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-test/2.1.0.RELEASE/spring-boot-test-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot/2.1.0.RELEASE/spring-boot-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/2.1.0.RELEASE/spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.1.0.RELEASE/spring-boot-autoconfigure-2.1.0.RELEASE.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib"/>
    <property name="sun.java.command" value="/Users/dthomas/Desktop/sols/e-shopping-product-dashboard/target/surefire/surefirebooter8538382258106560080.jar /Users/dthomas/Desktop/sols/e-shopping-product-dashboard/target/surefire 2020-01-19T20-14-42_832-jvmRun1 surefire8525448297797657854tmp surefire_0522259809123259702tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="surefire.test.class.path" value="/Users/dthomas/Desktop/sols/e-shopping-product-dashboard/target/test-classes:/Users/dthomas/Desktop/sols/e-shopping-product-dashboard/target/classes:/Users/dthomas/.m2/repository/org/springframework/data/spring-data-jpa/2.1.2.RELEASE/spring-data-jpa-2.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/data/spring-data-commons/2.1.2.RELEASE/spring-data-commons-2.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-orm/5.1.2.RELEASE/spring-orm-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-jdbc/5.1.2.RELEASE/spring-jdbc-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-context/5.1.2.RELEASE/spring-context-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-expression/5.1.2.RELEASE/spring-expression-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-aop/5.1.2.RELEASE/spring-aop-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-tx/5.1.2.RELEASE/spring-tx-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-beans/5.1.2.RELEASE/spring-beans-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-core/5.1.2.RELEASE/spring-core-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-jcl/5.1.2.RELEASE/spring-jcl-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/aspectj/aspectjrt/1.9.2/aspectjrt-1.9.2.jar:/Users/dthomas/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.1.0.RELEASE/spring-boot-starter-web-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-starter/2.1.0.RELEASE/spring-boot-starter-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.1.0.RELEASE/spring-boot-starter-logging-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/dthomas/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/dthomas/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.11.1/log4j-to-slf4j-2.11.1.jar:/Users/dthomas/.m2/repository/org/apache/logging/log4j/log4j-api/2.11.1/log4j-api-2.11.1.jar:/Users/dthomas/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/dthomas/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/dthomas/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.1.0.RELEASE/spring-boot-starter-json-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.7/jackson-datatype-jdk8-2.9.7.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.7/jackson-datatype-jsr310-2.9.7.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.7/jackson-module-parameter-names-2.9.7.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.1.0.RELEASE/spring-boot-starter-tomcat-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.12/tomcat-embed-core-9.0.12.jar:/Users/dthomas/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.12/tomcat-embed-el-9.0.12.jar:/Users/dthomas/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.12/tomcat-embed-websocket-9.0.12.jar:/Users/dthomas/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.13.Final/hibernate-validator-6.0.13.Final.jar:/Users/dthomas/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/dthomas/.m2/repository/org/springframework/spring-web/5.1.2.RELEASE/spring-web-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/spring-webmvc/5.1.2.RELEASE/spring-webmvc-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.2.Final/hibernate-jpa-2.1-api-1.0.2.Final.jar:/Users/dthomas/.m2/repository/org/hibernate/hibernate-core/5.3.7.Final/hibernate-core-5.3.7.Final.jar:/Users/dthomas/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/dthomas/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/dthomas/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/dthomas/.m2/repository/net/bytebuddy/byte-buddy/1.9.3/byte-buddy-1.9.3.jar:/Users/dthomas/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/dthomas/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/dthomas/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/dthomas/.m2/repository/com/fasterxml/classmate/1.4.0/classmate-1.4.0.jar:/Users/dthomas/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/dthomas/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/Users/dthomas/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/dthomas/.m2/repository/org/hibernate/hibernate-entitymanager/5.3.7.Final/hibernate-entitymanager-5.3.7.Final.jar:/Users/dthomas/.m2/repository/com/h2database/h2/1.4.197/h2-1.4.197.jar:/Users/dthomas/.m2/repository/com/hackerrank/applications/junit-ordered-test-runner/1.0.0/junit-ordered-test-runner-1.0.0.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.7/jackson-databind-2.9.7.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/dthomas/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.7/jackson-core-2.9.7.jar:/Users/dthomas/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/dthomas/.m2/repository/org/jdom/jdom/1.1/jdom-1.1.jar:/Users/dthomas/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/dthomas/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/dthomas/.m2/repository/org/springframework/spring-test/5.1.2.RELEASE/spring-test-5.1.2.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-test/2.1.0.RELEASE/spring-boot-test-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot/2.1.0.RELEASE/spring-boot-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/2.1.0.RELEASE/spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:/Users/dthomas/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.1.0.RELEASE/spring-boot-autoconfigure-2.1.0.RELEASE.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/dthomas"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre"/>
    <property name="basedir" value="/Users/dthomas/Desktop/sols/e-shopping-product-dashboard"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/Users/dthomas/Desktop/sols/e-shopping-product-dashboard/target/surefire/surefirebooter8538382258106560080.jar"/>
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="1.8.0_144-b01"/>
    <property name="user.name" value="dthomas"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="10.13.1"/>
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/dthomas/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/rv/vd_p4ylx44ddwrwwt47sx9nh0000gv/T/"/>
    <property name="java.version" value="1.8.0_144"/>
    <property name="user.dir" value="/Users/dthomas/Desktop/sols/e-shopping-product-dashboard"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/Users/dthomas/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.144-b01"/>
    <property name="java.ext.dirs" value="/Users/dthomas/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="java.class.version" value="52.0"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
  </properties>
  <testcase name="createProduct" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="5.188"/>
  <testcase name="createProductWithExistingId" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.005"/>
  <testcase name="updateProductRetailPrice" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.135">
    <failure message="Status expected:&lt;200&gt; but was:&lt;405&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<405>
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.updateProductRetailPrice(ProductsControllerTest.java:589)
]]></failure>
    <system-out><![CDATA[2020-01-19 20:14:49.847  WARN 39416 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="updateProductDiscountPrice" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.117">
    <failure message="Status expected:&lt;200&gt; but was:&lt;405&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<405>
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.updateProductDiscountPrice(ProductsControllerTest.java:619)
]]></failure>
    <system-out><![CDATA[2020-01-19 20:14:49.871  WARN 39416 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="updateProductAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.107">
    <failure message="Status expected:&lt;200&gt; but was:&lt;405&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<405>
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.updateProductAvailability(ProductsControllerTest.java:649)
]]></failure>
    <system-out><![CDATA[2020-01-19 20:14:49.885  WARN 39416 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="updateProductRetailAndDiscountPrice" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.097">
    <failure message="Status expected:&lt;200&gt; but was:&lt;405&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<405>
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.updateProductRetailAndDiscountPrice(ProductsControllerTest.java:679)
]]></failure>
    <system-out><![CDATA[2020-01-19 20:14:49.900  WARN 39416 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="updateProductRetailPriceAndAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.132">
    <failure message="Status expected:&lt;200&gt; but was:&lt;405&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<405>
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.updateProductRetailPriceAndAvailability(ProductsControllerTest.java:709)
]]></failure>
    <system-out><![CDATA[2020-01-19 20:14:49.915  WARN 39416 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="updateProductDiscountPriceAndAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.097">
    <failure message="Status expected:&lt;200&gt; but was:&lt;405&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<405>
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.updateProductDiscountPriceAndAvailability(ProductsControllerTest.java:739)
]]></failure>
    <system-out><![CDATA[2020-01-19 20:14:49.931  WARN 39416 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="updateProductRetailPriceDiscountPriceAndAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.103">
    <failure message="Status expected:&lt;200&gt; but was:&lt;405&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<200> but was:<405>
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.updateProductRetailPriceDiscountPriceAndAvailability(ProductsControllerTest.java:769)
]]></failure>
    <system-out><![CDATA[2020-01-19 20:14:49.946  WARN 39416 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="updateAvailabilityOfNonExistingProduct" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.09">
    <failure message="Status expected:&lt;400&gt; but was:&lt;405&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Status expected:<400> but was:<405>
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.updateAvailabilityOfNonExistingProduct(ProductsControllerTest.java:799)
]]></failure>
    <system-out><![CDATA[2020-01-19 20:14:49.961  WARN 39416 --- [           main] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/25
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 311.0, "discounted_price": 258.13, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="findProductById" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.076">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.findProductById(ProductsControllerTest.java:827)
</failure>
    <system-out><![CDATA[2020-01-19 20:14:49.981  INFO 39416 --- [           main] c.h.e.p.d.controller.ProductsController  : Fetching Product with id 2
&amp#27;[0;31mExpected <{"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": false}> but was <{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}>.&amp#27;[0m

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/25
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 311.0, "discounted_price": 258.13, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/2
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="findProductByNonExistingId" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.001"/>
  <testcase name="findProductsByCategory" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.098">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.findProductsByCategory(ProductsControllerTest.java:924)
</failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/25
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 311.0, "discounted_price": 258.13, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/2
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/25
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Product with id 25 not found"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Accessories]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="findProductsByNonExistingCategory" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.094">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.findProductsByNonExistingCategory(ProductsControllerTest.java:955)
</failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/25
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 311.0, "discounted_price": 258.13, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/2
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/25
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Product with id 25 not found"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Accessories]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Swimwear]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="findProductsByCategoryAndAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.103">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.findProductsByCategoryAndAvailability(ProductsControllerTest.java:1035)
</failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/25
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 311.0, "discounted_price": 258.13, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/2
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/25
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Product with id 25 not found"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Accessories]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Swimwear]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Full%20Body%20Outfits], availability=[1]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="findProductsByNonExistingCategoryAndAvailability" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.102">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.findProductsByNonExistingCategoryAndAvailability(ProductsControllerTest.java:1120)
</failure>
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/25
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 311.0, "discounted_price": 258.13, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/2
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/25
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Product with id 25 not found"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Accessories]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Swimwear]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Full%20Body%20Outfits], availability=[1]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Swimwear], availability=[1]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="findAllProducts" classname="com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest" time="0.12">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at com.hackerrank.eshopping.product.dashboard.controller.ProductsControllerTest.findAllProducts(ProductsControllerTest.java:1320)
</failure>
    <system-out><![CDATA[&amp#27;[0;31mExpected <{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","retail_price":303.0,"discounted_price":251.49,"availability":true}> but was <{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}> (at index 0).&amp#27;[0m

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Full Body Outfits", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 2, "name": "Shoes", "category": "Footwear", "retail_price": 150.0, "discounted_price": 123.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 3, "name": "Nightgown", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 4, "name": "Boots", "category": "Footwear", "retail_price": 162.0, "discounted_price": 132.84, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 5, "name": "Ball Gown", "category": "Full Body Outfits", "retail_price": 337.0, "discounted_price": 272.97, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 6, "name": "Shawl", "category": "Accessories", "retail_price": 283.0, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 7, "name": "Belt", "category": "Accessories", "retail_price": 471.0, "discounted_price": 419.19, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 8, "name": "Kaftan", "category": "Accessories", "retail_price": 237.0, "discounted_price": 215.67, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 9, "name": "Overalls", "category": "Full Body Outfits", "retail_price": 374.0, "discounted_price": 321.64, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 10, "name": "Cufflinks", "category": "Accessories", "retail_price": 284.0, "discounted_price": 247.08, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 11, "name": "Cargos", "category": "Bottoms", "retail_price": 498.0, "discounted_price": 428.28, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 12, "name": "Poncho", "category": "Accessories", "retail_price": 280.0, "discounted_price": 224.7, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 13, "name": "Cummerbund", "category": "Accessories", "retail_price": 435.0, "discounted_price": 400.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 14, "name": "Dress", "category": "Full Body Outfits", "retail_price": 175.0, "discounted_price": 140.0, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 15, "name": "Trainers", "category": "Footwear", "retail_price": 228.0, "discounted_price": 184.68, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 16, "name": "Tracksuit", "category": "Full Body Outfits", "retail_price": 471.0, "discounted_price": 423.9, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 17, "name": "Tailcoat", "category": "Full Body Outfits", "retail_price": 307.0, "discounted_price": 254.81, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 18, "name": "Vest", "category": "Tops", "retail_price": 446.0, "discounted_price": 392.48, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 19, "name": "Suit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 20, "name": "Catsuit", "category": "Full Body Outfits", "retail_price": 158.0, "discounted_price": 135.88, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 21, "name": "Dungarees", "category": "Full Body Outfits", "retail_price": 437.0, "discounted_price": 362.71, "availability": false}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /products
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"id": 1, "name": "Dressing Gown", "category": "Underwear", "retail_price": 303.0, "discounted_price": 251.49, "availability": true}
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.createProduct(com.hackerrank.eshopping.product.dashboard.model.Product)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Unable to create. A Product with id 1 already exist."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/6
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 325.45, "discounted_price": 260.36, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/10
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 284.0, "discounted_price": 227.2, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/2
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 150.0, "discounted_price": 123.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/12
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 350.0, "discounted_price": 283.5, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/19
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 125.0, "discounted_price": 100.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/20
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 250.0, "discounted_price": 200.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/13
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 500.0, "discounted_price": 450.0, "availability": false}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /products/25
       Parameters = {}
          Headers = {Content-Type=[application/json;charset=UTF-8]}
             Body = {"retail_price": 311.0, "discounted_price": 258.13, "availability": true}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.HttpRequestMethodNotSupportedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 405
    Error message = Request method 'PUT' not supported
          Headers = {Allow=[GET]}
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/2
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products/25
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<?> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.getProduct(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {"errorMessage":"Product with id 25 not found"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Accessories]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Swimwear]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Full%20Body%20Outfits], availability=[1]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {category=[Swimwear], availability=[1]}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /products
       Parameters = {}
          Headers = {}
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hackerrank.eshopping.product.dashboard.controller.ProductsController
           Method = public org.springframework.http.ResponseEntity<java.util.List<com.hackerrank.eshopping.product.dashboard.model.Product>> com.hackerrank.eshopping.product.dashboard.controller.ProductsController.listAllProducts()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = [{"id":1,"name":"Dressing Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":2,"name":"Shoes","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":3,"name":"Nightgown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":4,"name":"Boots","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":5,"name":"Ball Gown","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":6,"name":"Shawl","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":7,"name":"Belt","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":8,"name":"Kaftan","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":9,"name":"Overalls","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":10,"name":"Cufflinks","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":11,"name":"Cargos","category":"Bottoms","availability":true,"retailPrice":null,"discountedPrice":null},{"id":12,"name":"Poncho","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":13,"name":"Cummerbund","category":"Accessories","availability":true,"retailPrice":null,"discountedPrice":null},{"id":14,"name":"Dress","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":15,"name":"Trainers","category":"Footwear","availability":true,"retailPrice":null,"discountedPrice":null},{"id":16,"name":"Tracksuit","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null},{"id":17,"name":"Tailcoat","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":18,"name":"Vest","category":"Tops","availability":true,"retailPrice":null,"discountedPrice":null},{"id":19,"name":"Suit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":20,"name":"Catsuit","category":"Full Body Outfits","availability":true,"retailPrice":null,"discountedPrice":null},{"id":21,"name":"Dungarees","category":"Full Body Outfits","availability":false,"retailPrice":null,"discountedPrice":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
</testsuite>